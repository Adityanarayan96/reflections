How did viewing a diff between two versions of a file help you 
see the bug that
was introduced?

    It compared the two versions line by line
    untill a difference in character or string
    was fund.So we could easily verify the differences

How could having easy access to the entire history of a file 
make you a more
efficient programmer in the long term?

    This would help us noice our previous mistakes and
    how the code has been improved by us so that we don't have 
    practices again.

What do you think are the pros and cons of manually choosing 
when to create a commit, like you do in Git, vs having 
versions automatically saved, like Google
docs does?

   	Pros:We know from intuition when programs have to be saved
   	so makes the versions of the programs much more logically
   	fullfilling as opposed to automatic saving in which there 
   	might not be any logical colleration.

   	Cons:User might be inefficient forgetting to commit at the 
   	right time causing version gaps hat may be tough to 
   	recover from.

Why do you think some version control systems, like Git, allow 
saving multiple
files in one commit, while others, like Google Docs, treat 
each file separately?

   This is because GIT is primarily designed for code version
   storing in which sometimes multiple files may be related 
   and affect the way the other file works while in google docs
   we store documents or other things which doesn't contribute
   to code and hence is probably independent.Therfore it makes
   bbetter sense to save file independently here

How can you use the commands git log and git diff to view the 
history of files?

    Use GIT log to get the ID's of the commits that have been 
    done.Use GIT diff to find the changes of one commit wrt 
    the other.

How might using version control make you more confident to 
make changes that
could break something?

    This is done by the fact that you an always checkout to a
    previously working commit which helps that any majoor screw
    up will not affect us that much.

Now that you have your workspace set up, what do you want to 
try using Git for?

    check previous versions of cde that I will make and see 
    how it has evolved and if it has changed from okay to 
    better.